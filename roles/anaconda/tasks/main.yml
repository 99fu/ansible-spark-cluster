
- name: install bzip2
  package:
    name: bzip2
    state: latest

- name: set anaconda distribution fact
  set_fact: anaconda_install_file=Anaconda{{ anaconda.python_version }}-{{ anaconda.version }}-Linux-x86_64.sh

#- name: check anaconda downloaded
#  local_action: >
#    command test -f {{ anaconda.install_temp_dir }}/{{ anaconda_install_file }}
#  register: anaconda_downloaded
#  failed_when: anaconda_downloaded.rc not in [0, 1]
#  changed_when: False
#  run_once: true
#  tags: data-nodes

- name: clean previous anaconda deployments (python 2)
  file:
    state: absent
    path: "{{ anaconda.install_dir }}/anaconda2/"

- name: clean previous anaconda deployments (python 3)
  file:
    state: absent
    path: "{{ anaconda.install_dir }}/anaconda3/"

- debug:
     msg: "Downloading https://repo.continuum.io/archive/{{ anaconda_install_file }}"

- name: download anaconda package
  get_url:
     url: "https://repo.continuum.io/archive/{{ anaconda_install_file }}"
     dest: "{{ anaconda.install_temp_dir }}/{{ anaconda_install_file }}"
#  with_first_found:
#    - files:
#         - "{{ anaconda.install_temp_dir }}/{{ anaconda_install_file }}"
#      skip: true
#  when: (inventory_hostname in groups['master'])

- name: clean anaconda install directory
  file:
    path: "{{ anaconda.install_dir }}/anaconda{{ anaconda.python_version}}"
    state: absent

- name: install anaconda package
  shell: "bash {{ anaconda.install_temp_dir }}/{{ anaconda_install_file }} -b -p {{ anaconda.install_dir }}/anaconda{{ anaconda.python_version}}"

# Environment setup.
- name: Add anaconda_env to startup
  template:
    src: anaconda-profile.sh.j2
    dest: /etc/profile.d/anaconda-profile.sh
    mode: 0644
  when: anaconda.update_path
